前驱结点数组

import java.util.ArrayDeque;

public class Test {

	public static void main(String[] args) {
		
		int[] prevNode = new int[6];           
		prevNode[1] = 0;                  //最佳前驱结点中的数据要通过动态规划计算出来，先直接赋值模拟计算结果
		prevNode[2] = 0;					//节点2的最佳前驱结点是0
		prevNode[3] = 1;
		prevNode[4] = 3;
		prevNode[5] = 3;
		
		String sentence = "有意见分歧";      //待切分子句
		
		ArrayDeque<Integer> path = new ArrayDeque<Integer>();      //记录最佳切分路径
		//通过回溯发现最佳切分路径
		for (int i = 5; i > 0 ; i = prevNode[i]) {
			path.push(i);                                       //入栈
		}
		
		int start = 0;
		for (int end : path) {
			System.out.println(sentence.substring(start, end) + "/");
		}
		
 	}

}

结果：
有/
有意见/
有意见分歧/
